// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model school {
  id         Int       @id             @default(autoincrement())
  name       String    @db.VarChar(50)
  manager    String    @db.VarChar(70)
  admins     admin[]
  students   student[]
  classRooms classRoom[]
}

model superAdmin {
  id       Int       @id              @default(autoincrement())
  email    String    @db.VarChar(100) @unique()
  password String    @db.VarChar(255)
}

model admin {
  id       Int       @id              @default(autoincrement())
  email    String    @db.VarChar(100) @unique()
  password String    @db.VarChar(255)
  schoolId Int      
  school   school    @relation(fields: [schoolId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model student {
  id          Int          @id              @default(autoincrement())
  schoolId    Int      
  name        String       @db.VarChar(100)      
  classRoomId Int      
  school      school       @relation(fields: [schoolId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  classRoom   classRoom    @relation(fields: [classRoomId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model classRoom {
  id          Int       @id              @default(autoincrement())
  schoolId    Int      
  classNumber String    @db.VarChar(10)
  school      school    @relation(fields: [schoolId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  students    student[]
  @@unique([schoolId, classNumber])
}